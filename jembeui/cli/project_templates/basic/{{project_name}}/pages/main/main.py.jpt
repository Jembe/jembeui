from typing import TYPE_CHECKING
from jembeui import CPage, Component
from jembe import listener, NotFound
from {{ project_name }}.app import jmb
from .navigation import CNavbarMenu, CSidebarMenu
from .welcome import CWelcome
from .demo import CDemo

if TYPE_CHECKING:
    import jembe

__all__ = ("CMainPage",)


@jmb.page(
    "main",
    CPage.Config(
        components=dict(
            welcome=CWelcome,
            demo=CDemo,
            # navigation
            navbar_menu=CNavbarMenu,
            sidebar_menu=CSidebarMenu,
            # error pages
            p404=Component,
            p500=Component,
        ),
    ),
)
class CMainPage(CPage):
    """Main application page

    Primary responsability of Main/Root component is to render page navigation
    and display appropriate subcomonents"""

    MODALS = ()
    SWAPS = (
        "welcome",
        "demo",
        # Error pages
        "p404",
        "p500",
    )

    def init(self):
        """Sets default routing to None on _display event will update it"""
        self.routing = None
        return super().init()

    @listener(event="_display", source=SWAPS)
    def on_display_swap_component(self, event: "jembe.Event"):
        """Remove previous content when swaping conntent"""
        if self.routing is None:
            self.routing = event.source_name

            for name in self.SWAPS:
                if self.routing != name:
                    self.remove_component(name)

    def hydrate(self):
        """Hydrate page before displaying it"""
        if self.routing is None:
            self.display_home_page()

    def display_home_page(self):
        """Displayes default home page 'welcome'"""
        self.display_component("welcome")

    @listener(event="_exception", source="**")
    def on_exception(self, event: "jembe.Event"):
        """
        Catches NotFound expections generated by children
        component at any level, and displays 404, 403 or 500
        page if exception is not handled by other child component.
        """
        if event.handled is False:
            if isinstance(event.exception, NotFound):
                event.handled = True
                self.display_component("p404")
                self.redisplay("navbar_menu", "sidebar_menu")
                # returns True to redisplay it self other
                return True
